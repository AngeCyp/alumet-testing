name: "Create the release"

on:
  release:
    types: ["created"]
  push:

jobs:
  gather-informations:
    uses: alumet-dev/packaging/.github/workflows/build_rpm.yaml@ci/create-rpm-package
    with:
      target-architecture: x86_64
      build-version: 0.6.1
      release-version: 1


  publish:
    needs: gather-informations
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up folder
        run: |
          rm -rf docs
          mkdir -p docs          
      
      - name: Download RPM artifact
        uses: actions/download-artifact@v4
        with:
          path: ./docs

      - name: Install createrepo
        run: sudo apt-get update && sudo apt-get install -y createrepo-c
        
      - name: Create repository metadata
        run: |
          cd docs
          createrepo_c .
      
      - name: Setup gh-pages branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout gh-pages || git checkout --orphan gh-pages

      - name: Commit and push changes
        run: |
          git add docs
          git commit -m "Update RPM repository"
          git push origin gh-pages
      
      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3 # or specific "vX.X.X" version tag for this action
        with:
          path: docs/
      








  # attach-artifacts:
  #   needs: gather-informations
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4

  #   - name: Download RPM artifact
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: rpm-package
  #       path: ./rpms

  #   - name: Get release information
  #     id: get_release
  #     uses: actions/github-script@v7
  #     with:
  #       script: |
  #         const release_id = context.payload.release.id;
  #         return { release_id };

  #   - name: Upload RPM to release
  #     uses: actions/upload-release-asset@v1
  #     with:
  #       upload_url: ${{ github.event.release.upload_url }}
  #       asset_path: ./rpms/*.rpm
  #       asset_name: rpm-package.rpm
  #       asset_content_type: application/x-rpm
  #       release_id: ${{ steps.get_release.outputs.release_id }}
  #       github_token: ${{ secrets.GITHUB_TOKEN }}

    